/*!
 * Shuffle.js by @Vestride
 * Categorize, sort, and filter a responsive grid of items.
 * Dependencies: jQuery 1.9+, Modernizr 2.6.2+
 * @license MIT license
 * @version 3.1.1
 */
!function (a) {
    "function" == typeof define && define.amd ? define(["jquery", "modernizr"], a) :
        "object" == typeof exports ? module.exports = a(require("jquery"), window.Modernizr) :
            window.Shuffle = a(window.jQuery, window.Modernizr);
}(function (a, b) {
    "use strict";

    function d(a) {
        return a ? a.replace(/([A-Z])/g, function (a, b) {
            return "-" + b.toLowerCase();
        }).replace(/^ms-/, "-ms-") : "";
    }

    function e(b, c, d) {
        var e, f, g, h = null, i = 0;
        d = d || {};
        var j = function () {
            i = d.leading === !1 ? 0 : a.now();
            h = null;
            g = b.apply(e, f);
            e = f = null;
        };
        return function () {
            var k = a.now();
            i || d.leading !== !1 || (i = k);
            var l = c - (k - i);
            return e = this, f = arguments,
                0 >= l || l > c ? (clearTimeout(h),
                    h = null,
                    i = k,
                    g = b.apply(e, f),
                    e = f = null) : h || d.trailing === !1 || (h = setTimeout(j, l)),
                g;
        };
    }

    function findItem(a, predicate) {
        for (var i = 0; i < a.length; i++) {
            if (predicate(a[i], i, a)) {
                console.log("Item found:", a[i]);
                return a[i];
            }
        }
        console.log("Item not found");
        return null;
    }

    var items = [1, 2, 3, 4, 5];

    findItem(items, function (item) {
        return item === 3; // Stop when item equals 3
    });


    function g(b, c, d) {
        return setTimeout(a.proxy(b, c), d);
    }

    function h(a) {
        return Math.max.apply(Math, a);
    }

    function i(a) {
        return Math.min.apply(Math, a);
    }

    function j(a) {
        return a && !isNaN(a) ? a : 0;
    }

    function k(a) {
        var b, c, d = a.length;
        if (!d)
            return a;
        for (; --d;)
            c = Math.floor(Math.random() * (d + 1)),
                b = a[c],
                a[c] = a[d],
                a[d] = b;
        return a;
    }

    if ("object" != typeof b)
        throw new Error("Shuffle.js requires Modernizr.\nhttp://vestride.github.io/Shuffle/#dependencies");

    var l = b.prefixed("transition"),
        m = b.prefixed("transitionDelay"),
        n = b.prefixed("transitionDuration"),
        o = {
            WebkitTransition: "webkitTransitionEnd",
            transition: "transitionend"
        }[l],
        p = b.prefixed("transform"),
        q = d(p),
        r = b.csstransforms && b.csstransitions,
        s = b.csstransforms3d,
        t = !!window.getComputedStyle,
        u = "shuffle",
        v = "all",
        w = "groups",
        x = 1,
        y = .001,
        z = window.getComputedStyle || function () { },
        A = function (a, b) {
            this.x = j(a);
            this.y = j(b);
        };

    A.equals = function (a, b) {
        return a.x === b.x && a.y === b.y;
    };

    var B = function () {
        if (!t)
            return !1;
        var a = document.body || document.documentElement,
            b = document.createElement("div");
        b.style.cssText = "width:10px;padding:2px;-webkit-box-sizing:border-box;box-sizing:border-box;";
        a.appendChild(b);
        var c = z(b, null).width,
            d = "10px" === c;
        return a.removeChild(b),
            d;
    }(),
        C = 0,
        D = a(window),
        E = function (b, c) {
            c = c || {};
            a.extend(this, E.options, c, E.settings);
            this.$el = a(b);
            this.element = b;
            this.unique = "shuffle_" + C++;
            this._fire(E.EventType.LOADING);
            this._init();
            g(function () {
                this.initialized = !0;
                this._fire(E.EventType.DONE);
            }, this, 16);
        };

    return E.EventType = {
        LOADING: "loading",
        DONE: "done",
        LAYOUT: "layout",
        REMOVED: "removed"
    },
        E.ClassName = {
            BASE: u,
            SHUFFLE_ITEM: "shuffle-item",
            FILTERED: "filtered",
            CONCEALED: "concealed"
        },
        E.options = {
            group: v,
            speed: 250,
            easing: "ease-out",
            itemSelector: "",
            sizer: null,
            gutterWidth: 0,
            columnWidth: 0,
            delimeter: null,
            buffer: 0,
            columnThreshold: t ? .01 : .1,
            initialSort: null,
            throttle: e,
            throttleTime: 300,
            sequentialFadeDelay: 150,
            supported: r
        },
        E.settings = {
            useSizer: !1,
            itemCss: {
                position: "absolute",
                top: 0,
                left: 0,
                visibility: "visible"
            },
            revealAppendedDelay: 300,
            lastSort: {},
            lastFilter: v,
            enabled: !0,
            destroyed: !1,
            initialized: !1,
            _animations: [],
            _transitions: [],
            _isMovementCanceled: !1,
            styleQueue: []
        },
        E.Point = A,
        E._getItemTransformString = function (a, b) {
            return s ? "translate3d(" + a.x + "px, " + a.y + "px, 0) scale3d(" + b + ", " + b + ", 1)" : "translate(" + a.x + "px, " + a.y + "px) scale(" + b + ")";
        },
        E._getNumberStyle = function (b, c, d) {
            if (t) {
                d = d || z(b, null);
                var e = E._getFloat(d[c]);
                return B || "width" !== c ? B || "height" !== c || (e += E._getFloat(d.paddingTop) + E._getFloat(d.paddingBottom) + E._getFloat(d.borderTopWidth) + E._getFloat(d.borderBottomWidth)) : e += E._getFloat(d.paddingLeft) + E._getFloat(d.paddingRight) + E._getFloat(d.borderLeftWidth) + E._getFloat(d.borderRightWidth),
                    e;
            }
            return E._getFloat(a(b).css(c));
        },
        E._getFloat = function (a) {
            return j(parseFloat(a));
        },
        E._getOuterWidth = function (a, b) {
            var c = z(a, null),
                d = E._getNumberStyle(a, "width", c);
            if (b) {
                var e = E._getNumberStyle(a, "marginLeft", c),
                    f = E._getNumberStyle(a, "marginRight", c);
                d += e + f;
            }
            return d;
        },
        E._getOuterHeight = function (a, b) {
            var c = z(a, null),
                d = E._getNumberStyle(a, "height", c);
            if (b) {
                var e = E._getNumberStyle(a, "marginTop", c),
                    f = E._getNumberStyle(a, "marginBottom", c);
                d += e + f;
            }
            return d;
        },
        E._skipTransition = function (a, b, c) {
            var d = a.style[n];
            a.style[n] = "0ms";
            b.call(c);
            a.offsetWidth; // Trigger reflow
            a.style[n] = d;
        },
        E.prototype._init = function () {
            this.$items = this._getItems();
            this.sizer = this._getElementOption(this.sizer);
            if (this.sizer) this.useSizer = !0;
            this.$el.addClass(E.ClassName.BASE);
            this._initItems();
            D.on("resize." + u + "." + this.unique, this._getResizeFunction());
            var a = this.$el.css(["position", "overflow"]),
                b = E._getOuterWidth(this.element);
            this._validateStyles(a);
            this._setColumns(b);
            this.shuffle(this.group, this.initialSort);
            if (this.supported) g(this._initLayout, this, 1);
        },
        E.prototype._validateStyles = function (a) {
            a.position !== "relative" && a.position !== "absolute" && a.position !== "fixed" && this.$el.css("position", "relative");
            a.overflow !== "hidden" && this.$el.css("overflow", "hidden");
        },
        E.prototype._setColumns = function (a) {
            var b = this.$el,
                c = this.columnWidth || this.$items.first().outerWidth();
            this.columnWidth = c;
            this.columns = Math.floor(a / c);
            if (this.columnWidth > 0)
                b.css("position", "relative");
            this.itemWidth = a / this.columns - this.gutterWidth;
        },
        E.prototype._getElementOption = function (a) {
            return a && a.jquery ? a.get(0) : a;
        },
        E.prototype._getResizeFunction = function () {
            var a = this,
                b = this.throttle(a._resize, this.throttleTime, this);
            return function () {
                b();
            };
        },
        E.prototype._resize = function () {
            if (!this.supported)
                return;
            var a = this.$el.width();
            this._setColumns(a);
            this._initLayout();
            this._layout();
        },
        E.prototype._getItems = function () {
            return this.$el.children(this.itemSelector);
        },
        E.prototype._initItems = function () {
            var a = this;
            this.$items.each(function () {
                a._getItem(a.$(this));
            });
        },
        E.prototype._getItem = function (a) {
            return a.data("shuffle") || a.data("shuffle", new E.Item(a, this));
        },
        E.prototype._initLayout = function () {
            this._updateItemPosition();
            this._layout();
        },
        E.prototype._updateItemPosition = function () {
            var a = this;
            this.$items.each(function () {
                var b = a._getItem(a.$(this));
                if (b)
                    b.updatePosition();
            });
        },
        E.prototype._layout = function () {
            this._layoutItems();
        },
        E.prototype._layoutItems = function () {
            var a = this,
                b = this._getItemLayout();
            console.log("Item Layout:", b); // Debugging line
            this.$items.each(function () {
                var c = a._getItem(a.$(this));
                c.setLayout(b);
            });
        },
        E.prototype._getItemLayout = function () {
            return {
                x: 0,
                y: 0
            };
        },
        E.prototype.shuffle = function (a, b) {
            var c = this;
            a = a || this.group;
            b = b || this.initialSort;
            this._fire(E.EventType.LOADING);
            this._initLayout();
            this._updateItemPosition();
            this._layout();
            this._fire(E.EventType.DONE);
        },
        E.prototype._fire = function (a) {
            this.$el.trigger(a);
        },
        E;
});
